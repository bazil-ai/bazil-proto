// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.21.12
// source: runtime.proto

package bazil_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CompressionType int32

const (
	CompressionType_NONE           CompressionType = 0
	CompressionType_MEANSTD_16BIT  CompressionType = 1
	CompressionType_FLOAT16        CompressionType = 2
	CompressionType_QUANTILE_8BIT  CompressionType = 3
	CompressionType_UNIFORM_8BIT   CompressionType = 4
	CompressionType_BLOCKWISE_8BIT CompressionType = 5
)

// Enum value maps for CompressionType.
var (
	CompressionType_name = map[int32]string{
		0: "NONE",
		1: "MEANSTD_16BIT",
		2: "FLOAT16",
		3: "QUANTILE_8BIT",
		4: "UNIFORM_8BIT",
		5: "BLOCKWISE_8BIT",
	}
	CompressionType_value = map[string]int32{
		"NONE":           0,
		"MEANSTD_16BIT":  1,
		"FLOAT16":        2,
		"QUANTILE_8BIT":  3,
		"UNIFORM_8BIT":   4,
		"BLOCKWISE_8BIT": 5,
	}
)

func (x CompressionType) Enum() *CompressionType {
	p := new(CompressionType)
	*p = x
	return p
}

func (x CompressionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompressionType) Descriptor() protoreflect.EnumDescriptor {
	return file_runtime_proto_enumTypes[0].Descriptor()
}

func (CompressionType) Type() protoreflect.EnumType {
	return &file_runtime_proto_enumTypes[0]
}

func (x CompressionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompressionType.Descriptor instead.
func (CompressionType) EnumDescriptor() ([]byte, []int) {
	return file_runtime_proto_rawDescGZIP(), []int{0}
}

type ExpertUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ExpertUID) Reset() {
	*x = ExpertUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runtime_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpertUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpertUID) ProtoMessage() {}

func (x *ExpertUID) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpertUID.ProtoReflect.Descriptor instead.
func (*ExpertUID) Descriptor() ([]byte, []int) {
	return file_runtime_proto_rawDescGZIP(), []int{0}
}

func (x *ExpertUID) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type ExpertInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerializedInfo []byte `protobuf:"bytes,1,opt,name=serialized_info,json=serializedInfo,proto3" json:"serialized_info,omitempty"`
}

func (x *ExpertInfo) Reset() {
	*x = ExpertInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runtime_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpertInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpertInfo) ProtoMessage() {}

func (x *ExpertInfo) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpertInfo.ProtoReflect.Descriptor instead.
func (*ExpertInfo) Descriptor() ([]byte, []int) {
	return file_runtime_proto_rawDescGZIP(), []int{1}
}

func (x *ExpertInfo) GetSerializedInfo() []byte {
	if x != nil {
		return x.SerializedInfo
	}
	return nil
}

type ExpertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string    `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Tensors  []*Tensor `protobuf:"bytes,2,rep,name=tensors,proto3" json:"tensors,omitempty"`
	Metadata []byte    `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *ExpertRequest) Reset() {
	*x = ExpertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runtime_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpertRequest) ProtoMessage() {}

func (x *ExpertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpertRequest.ProtoReflect.Descriptor instead.
func (*ExpertRequest) Descriptor() ([]byte, []int) {
	return file_runtime_proto_rawDescGZIP(), []int{2}
}

func (x *ExpertRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ExpertRequest) GetTensors() []*Tensor {
	if x != nil {
		return x.Tensors
	}
	return nil
}

func (x *ExpertRequest) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ExpertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tensors  []*Tensor `protobuf:"bytes,2,rep,name=tensors,proto3" json:"tensors,omitempty"`
	Metadata []byte    `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *ExpertResponse) Reset() {
	*x = ExpertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runtime_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpertResponse) ProtoMessage() {}

func (x *ExpertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpertResponse.ProtoReflect.Descriptor instead.
func (*ExpertResponse) Descriptor() ([]byte, []int) {
	return file_runtime_proto_rawDescGZIP(), []int{3}
}

func (x *ExpertResponse) GetTensors() []*Tensor {
	if x != nil {
		return x.Tensors
	}
	return nil
}

func (x *ExpertResponse) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Tensor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buffer       []byte          `protobuf:"bytes,1,opt,name=buffer,proto3" json:"buffer,omitempty"`
	Size         []uint32        `protobuf:"varint,2,rep,packed,name=size,proto3" json:"size,omitempty"`
	RequiresGrad bool            `protobuf:"varint,3,opt,name=requires_grad,json=requiresGrad,proto3" json:"requires_grad,omitempty"`
	Dtype        string          `protobuf:"bytes,4,opt,name=dtype,proto3" json:"dtype,omitempty"`
	Compression  CompressionType `protobuf:"varint,5,opt,name=compression,proto3,enum=bazil.CompressionType" json:"compression,omitempty"`
	Chunks       int32           `protobuf:"varint,6,opt,name=chunks,proto3" json:"chunks,omitempty"`
}

func (x *Tensor) Reset() {
	*x = Tensor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runtime_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tensor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tensor) ProtoMessage() {}

func (x *Tensor) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tensor.ProtoReflect.Descriptor instead.
func (*Tensor) Descriptor() ([]byte, []int) {
	return file_runtime_proto_rawDescGZIP(), []int{4}
}

func (x *Tensor) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

func (x *Tensor) GetSize() []uint32 {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *Tensor) GetRequiresGrad() bool {
	if x != nil {
		return x.RequiresGrad
	}
	return false
}

func (x *Tensor) GetDtype() string {
	if x != nil {
		return x.Dtype
	}
	return ""
}

func (x *Tensor) GetCompression() CompressionType {
	if x != nil {
		return x.Compression
	}
	return CompressionType_NONE
}

func (x *Tensor) GetChunks() int32 {
	if x != nil {
		return x.Chunks
	}
	return 0
}

var File_runtime_proto protoreflect.FileDescriptor

var file_runtime_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x62, 0x61, 0x7a, 0x69, 0x6c, 0x22, 0x1d, 0x0a, 0x09, 0x45, 0x78, 0x70, 0x65, 0x72, 0x74,
	0x55, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x65, 0x72, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x66, 0x0a, 0x0d,
	0x45, 0x78, 0x70, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x27, 0x0a, 0x07, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x62, 0x61, 0x7a, 0x69, 0x6c, 0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x52,
	0x07, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x55, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x61, 0x7a, 0x69, 0x6c, 0x2e,
	0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x52, 0x07, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc1, 0x01, 0x0a, 0x06,
	0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x67,
	0x72, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x73, 0x47, 0x72, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x62, 0x61, 0x7a, 0x69, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x2a,
	0x74, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x4d, 0x45, 0x41, 0x4e, 0x53, 0x54, 0x44, 0x5f, 0x31, 0x36, 0x42, 0x49, 0x54, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x31, 0x36, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d,
	0x51, 0x55, 0x41, 0x4e, 0x54, 0x49, 0x4c, 0x45, 0x5f, 0x38, 0x42, 0x49, 0x54, 0x10, 0x03, 0x12,
	0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x49, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x38, 0x42, 0x49, 0x54, 0x10,
	0x04, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x57, 0x49, 0x53, 0x45, 0x5f, 0x38,
	0x42, 0x49, 0x54, 0x10, 0x05, 0x32, 0xa2, 0x01, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2d,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x2e, 0x62, 0x61, 0x7a, 0x69, 0x6c, 0x2e, 0x45,
	0x78, 0x70, 0x65, 0x72, 0x74, 0x55, 0x49, 0x44, 0x1a, 0x11, 0x2e, 0x62, 0x61, 0x7a, 0x69, 0x6c,
	0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x35, 0x0a,
	0x08, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x12, 0x14, 0x2e, 0x62, 0x61, 0x7a, 0x69,
	0x6c, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0d, 0x2e, 0x62, 0x61, 0x7a, 0x69, 0x6c, 0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x22, 0x00,
	0x28, 0x01, 0x30, 0x01, 0x12, 0x34, 0x0a, 0x07, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x14, 0x2e, 0x62, 0x61, 0x7a, 0x69, 0x6c, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x62, 0x61, 0x7a, 0x69, 0x6c, 0x2e, 0x54, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x7a, 0x69, 0x6c, 0x2d, 0x61,
	0x69, 0x2f, 0x62, 0x61, 0x7a, 0x69, 0x6c, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_runtime_proto_rawDescOnce sync.Once
	file_runtime_proto_rawDescData = file_runtime_proto_rawDesc
)

func file_runtime_proto_rawDescGZIP() []byte {
	file_runtime_proto_rawDescOnce.Do(func() {
		file_runtime_proto_rawDescData = protoimpl.X.CompressGZIP(file_runtime_proto_rawDescData)
	})
	return file_runtime_proto_rawDescData
}

var file_runtime_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_runtime_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_runtime_proto_goTypes = []interface{}{
	(CompressionType)(0),   // 0: bazil.CompressionType
	(*ExpertUID)(nil),      // 1: bazil.ExpertUID
	(*ExpertInfo)(nil),     // 2: bazil.ExpertInfo
	(*ExpertRequest)(nil),  // 3: bazil.ExpertRequest
	(*ExpertResponse)(nil), // 4: bazil.ExpertResponse
	(*Tensor)(nil),         // 5: bazil.Tensor
}
var file_runtime_proto_depIdxs = []int32{
	5, // 0: bazil.ExpertRequest.tensors:type_name -> bazil.Tensor
	5, // 1: bazil.ExpertResponse.tensors:type_name -> bazil.Tensor
	0, // 2: bazil.Tensor.compression:type_name -> bazil.CompressionType
	1, // 3: bazil.Node.Info:input_type -> bazil.ExpertUID
	3, // 4: bazil.Node.Backward:input_type -> bazil.ExpertRequest
	3, // 5: bazil.Node.Forward:input_type -> bazil.ExpertRequest
	2, // 6: bazil.Node.Info:output_type -> bazil.ExpertInfo
	5, // 7: bazil.Node.Backward:output_type -> bazil.Tensor
	5, // 8: bazil.Node.Forward:output_type -> bazil.Tensor
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_runtime_proto_init() }
func file_runtime_proto_init() {
	if File_runtime_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_runtime_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpertUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runtime_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpertInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runtime_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runtime_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runtime_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tensor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_runtime_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_runtime_proto_goTypes,
		DependencyIndexes: file_runtime_proto_depIdxs,
		EnumInfos:         file_runtime_proto_enumTypes,
		MessageInfos:      file_runtime_proto_msgTypes,
	}.Build()
	File_runtime_proto = out.File
	file_runtime_proto_rawDesc = nil
	file_runtime_proto_goTypes = nil
	file_runtime_proto_depIdxs = nil
}
